set -A openbsd_mirrors '10.0.1.100' 'ftp3.usa.openbsd.org' 'ftp.openbsd.org'

grey="\033[01;30m"
red="\033[01;31m"
green="\033[01;32m"
yellow="\033[01;33m"
blue="\033[01;34m"
magenta="\033[01;35m"
cyan="\033[01;35m"
bold="\033[01;39m"

white="\033[0m"

# usage: lockie /tmp/lockname "$CMD"
function lockie {
	cmd=$2
	lock=$1

	if [ ! -e $lock ]; then
		touch $lock
		$cmd
		code=$?
		rm $lock
		return $code
	else 
		echo "${red}lock exists${white}"
	fi
}

function find_mirror {
	for mirror in ${openbsd_mirrors[@]}; do 
		ping -i 1 -q -c 1 $mirror 2>&1 > /dev/null
		if [ "$?" -eq "0" ]; then
			OPENBSD_MIRROR=$mirror
			break;
		fi
	done
}

function set_snap_path {
	if [ "${SNAP_PATH}" == "" ]; then
		echo "${bold}Finding a mirror${white}"

		if [ "${OPENBSD_MIRROR}" == "" ]; then
			find_mirror
		fi

		if [ "X$(sysctl kern.version | egrep 'current|beta')" == "X" ]; then
			export SNAP_PATH="http://${OPENBSD_MIRROR}/pub/OpenBSD/$( uname -r )/$( machine )/"
		else 
			export SNAP_PATH="http://${OPENBSD_MIRROR}/pub/OpenBSD/snapshots/$( machine )/"
		fi
	fi

	echo "${bold}Using${white} ${green}${OPENBSD_MIRROR}${white}"
}

function set_pkg_path {
	if [ "${PKG_PATH}" == "" ]; then
		echo "${bold}Finding a mirror${white}"

		if [ "${OPENBSD_MIRROR}" == "" ]; then
			find_mirror
		fi

		if [ "X$(sysctl kern.version | egrep 'current|beta')" == "X" ]; then
			export PKG_PATH="http://${OPENBSD_MIRROR}/pub/OpenBSD/$( uname -r )/packages/$( arch -s )/"
		else 
			export PKG_PATH="http://${OPENBSD_MIRROR}/pub/OpenBSD/snapshots/packages/$( arch -s )/"
		fi
	fi

	echo "${bold}Using${white} ${green}${OPENBSD_MIRROR}${white}"
}

# vim: set filetype=shell
