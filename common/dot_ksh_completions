PKG_LIST=$(ls -1 /var/db/pkg)

function reload_completions {
	if [ -e ~/.ksh_completions ]; then
		. ~/.ksh_completions
		echo "ksh completions reloaded"
	fi
}

set -A complete_kill_1 -- -9 -HUP -INFO -KILL -TERM

pgrep -q vmd
if [ $? = 0 ]; then
	set -A complete_vmctl -- console load reload start stop reset status
	set -A complete_vmctl_2 -- $(vmctl status | awk '!/NAME/{print $NF}')
fi

pgrep -q mpd
if [ $? = 0 ]; then
	set -A complete_mpc_1 -- lsplaylists ls play pause toggle prev random shuffle stop update
	set -A complete_mpc_2 -- $(mpc lsplaylists | sort)
fi

if [ -d ~/.password-store ]; then
	PASS_LIST=$(
		cd ~/.password-store
		find . -type f -name \*.gpg | sed 's/^\.\///' | sed 's/\.gpg$//g'
	)

	set -A complete_pass -- $PASS_LIST -c generate edit insert git
	set -A complete_pass_2 -- $PASS_LIST push

fi

set -A complete_pkg_delete -- $PKG_LIST
set -A complete_pkg_info -- $PKG_LIST

set -A complete_ssh -- $(awk '{split($1,a,","); print a[1]}' ~/.ssh/known_hosts)
set -A complete_mosh -- $(awk '{split($1,a,","); print a[1]}' ~/.ssh/known_hosts)

set -A complete_rcctl_1 -- disable enable get ls order set
set -A complete_rcctl_2 -- $(ls /etc/rc.d)

set -A complete_signify_1 -- -C -G -S -V
set -A complete_signify_2 -- -q -p -x -c -m -t -z
set -A complete_signify_3 -- -p -x -c -m -t -z

set -A complete_make_1 -- install clean repackage reinstall

set -A complete_beet_1 -- clearart config duplicates embedart extractart fetchart fields fingerprint help import lastgenre list lyrics mbsync missing modify move mpdstats remove scrub splupdate as stats submit update version web write

set -A complete_emacs -- --daemon --debug-init
set -A complete_emacsclient -- -c -t

set -A complete_gpg2 -- --refresh --receive-keys --armor --clearsign --sign --list-key --decrypt --verify --detach-sig

set -A complete_git_1 -- pull push mpull mpush clone checkout status commit

set -A complete_ifconfig_1 -- $(ifconfig | grep ^[a-z] | cut -d: -f1)

set -A complete_mixerctl_1 -- $(mixerctl | cut -d= -f 1)
