#-*-Shell-script-*-

export LC_CTYPE="en_US.UTF-8"

OS=$(uname)

alias sbcl="rlwrap sbcl"

alias tmux="tmux -2"
alias irc="export TERM=xterm; tmux at -t irc"
alias build="dpb -c -h /home/buildie/hosts -P"
alias cdw='cd $(make show=WRKSRC)'
alias pup='doas /usr/sbin/pkg_add -u'

if [ -e ~/.kshlib ]; then
    . ~/.kshlib
fi

if [ -e ~/.git-prompt ]; then
   . ~/.git-prompt
   export GIT_PS1_SHOWDIRTYSTATE=true
   export GIT_PS1_SHOWUNTRACKEDFILES=true
   export GIT_PS1_SHOWCOLORHINTS=true
fi

if [ $OS == "OpenBSD" ]; then
    function get_pkg_path {
	ARCH=$(arch -s)
	LINE=$(cat /etc/pkg.conf | grep installpath | awk '{print $NF}' | sed 's/%a/%s/')
	printf $LINE $ARCH	
    }

    if [ ! -f ~/.cvsrc ]; then
	export CVSROOT="anoncvs@anoncvs3.usa.openbsd.org:/cvs"
    fi
fi

if [ -d ~/openbsd ]; then
    DATADIR=~/openbsd
else
    DATADIR=/usr
fi

export DATADIR

if [ -d /data/user_storage/${USER}/Maildir ]; then
    MAILDIR=/data/user_storage/${USER}/Maildir
else
    MAILDIR=~/Maildir
fi

export MAILDIR

GOPATH=~/
PATH=$HOME/bin:/bin:/sbin:/usr/bin:/usr/sbin:/usr/X11R6/bin:/usr/local/bin:/usr/local/sbin:/usr/games:$HOME/bin:$GOROOT/bin:$GOPATH/bin

if [ -d ~/node_bin/node_modules/.bin ]; then
    PATH=$PATH:~/node_bin/node_modules/.bin
fi

if [ -d /usr/ports/infrastructure/bin ]; then
    PATH=$PATH:/usr/ports/infrastructure/bin
fi

if [ -d ~/Development/depot_tools ]; then
    PATH=$PATH:~/Development/depot_tools
fi

if [ -d /usr/local/jdk-1.7.0/bin ]; then
    PATH=$PATH:/usr/local/jdk-1.7.0/bin
fi
#if [ -d /usr/local/jdk-1.8.0/bin ]; then
#    PATH=$PATH:/usr/local/jdk-1.8.0/bin
#fi

if [ -d ~/.cabal/bin ]; then
    PATH=~/.cabal/bin:$PATH
fi

#export PATH HOME TERM GOPATH GOROOT
export PATH HOME TERM GOPATH

function vdiff {
    cp -p $1 $1.orig
    emacsclient -c $1
}

function pclean {
	find . -name \*.orig -exec rm {} \;
	find . -size 0 -exec rm {} \;
}

set -A big_gits /usr/ports /usr/src

function git_branch_name {
    # __git_ps1 causes some slowness on large repos, don't run this there.
    for d in "${big_gits[@]}"; do
        echo "${PWD}" | grep -q "${d}"
        if [ $? == 0 ]; then
	    echo "[${bold}BIG${white}]"
            return
        fi
    done
    branch=$(__git_ps1 %s)
    if [ "${branch}" != "" ]; then
	if [ "${branch}" = "(no branch)" ]; then
	    # probably have a tag
	    br_ch=$( perl -e 'binmode STDOUT, ":utf8"; print "\x{16D8}";' )
	    branch="$br_ch $( git describe --tags | head -n 1 )"
	fi
	echo "[${bold}${branch}${white}]"
    fi
}

function hg_q_name {
    if [ -d .hg ]; then
	if [ -f .hg/patches/status ]; then
	    branch=$(cat .hg/patches/status | awk -F: '{print $NF}')
	    if [ "${branch}" != "" ]; then
		echo "[${bold}${branch}${white}]"
	    fi
	fi
    fi
}

function ltodo {
    if [ -f .todo ]; then
	items=$(todo | wc -l | awk '{print $1}')
        if [ "${items}" != "0" ]; then
            echo "\n↪[${bold}TODO: ${items}${white}]"
        fi
    fi
}

if [ "$(id -u)" -eq 0 ] ; then
    PS1='\u@\h[\[\e[01;$(($??31:39))m\]$?\[\e[0m]\]:\w\]$(ltodo)# '
else
    PS1='\u@\h[\[\e[01;$(($??31:39))m\]$?\[\e[0m]\]:\w\]$(git_branch_name)$(ltodo)λ '
fi
